// @generated by protoc-gen-es v0.1.1 with parameter "target=js+dts"
// @generated from file kintai/v1/kintai_service.proto (package kintai.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, StringValue} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";

/**
 * @generated from message kintai.v1.StartRequest
 */
export declare class StartRequest extends Message<StartRequest> {
  /**
   * @generated from field: kintai.v1.StartRequest.Place place = 1;
   */
  place: StartRequest_Place;

  /**
   * @generated from field: repeated google.protobuf.StringValue slack_channel_names = 2 [deprecated = true];
   * @deprecated
   */
  slackChannelNames: StringValue[];

  /**
   * @generated from field: repeated google.protobuf.StringValue slack_channels = 3;
   */
  slackChannels: StringValue[];

  constructor(data?: PartialMessage<StartRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kintai.v1.StartRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StartRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StartRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StartRequest;

  static equals(a: StartRequest | PlainMessage<StartRequest> | undefined, b: StartRequest | PlainMessage<StartRequest> | undefined): boolean;
}

/**
 * @generated from enum kintai.v1.StartRequest.Place
 */
export declare enum StartRequest_Place {
  /**
   * @generated from enum value: PLACE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PLACE_HOME = 1;
   */
  HOME = 1,

  /**
   * @generated from enum value: PLACE_OFFICE = 2;
   */
  OFFICE = 2,
}

/**
 * @generated from message kintai.v1.StartResponse
 */
export declare class StartResponse extends Message<StartResponse> {
  constructor(data?: PartialMessage<StartResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kintai.v1.StartResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StartResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StartResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StartResponse;

  static equals(a: StartResponse | PlainMessage<StartResponse> | undefined, b: StartResponse | PlainMessage<StartResponse> | undefined): boolean;
}

/**
 * @generated from message kintai.v1.FinishRequest
 */
export declare class FinishRequest extends Message<FinishRequest> {
  /**
   * @generated from field: repeated google.protobuf.StringValue slack_channels = 1;
   */
  slackChannels: StringValue[];

  /**
   * @generated from field: optional string content = 2;
   */
  content?: string;

  constructor(data?: PartialMessage<FinishRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kintai.v1.FinishRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FinishRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FinishRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FinishRequest;

  static equals(a: FinishRequest | PlainMessage<FinishRequest> | undefined, b: FinishRequest | PlainMessage<FinishRequest> | undefined): boolean;
}

/**
 * @generated from message kintai.v1.FinishResponse
 */
export declare class FinishResponse extends Message<FinishResponse> {
  constructor(data?: PartialMessage<FinishResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "kintai.v1.FinishResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FinishResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FinishResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FinishResponse;

  static equals(a: FinishResponse | PlainMessage<FinishResponse> | undefined, b: FinishResponse | PlainMessage<FinishResponse> | undefined): boolean;
}

