// @generated by protoc-gen-es v0.1.1 with parameter "target=ts"
// @generated from file server_status/v1/server_status_service.proto (package server_status.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";

/**
 * @generated from message server_status.v1.GetStatusRequest
 */
export class GetStatusRequest extends Message<GetStatusRequest> {
  constructor(data?: PartialMessage<GetStatusRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "server_status.v1.GetStatusRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetStatusRequest {
    return new GetStatusRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetStatusRequest {
    return new GetStatusRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetStatusRequest {
    return new GetStatusRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetStatusRequest | PlainMessage<GetStatusRequest> | undefined, b: GetStatusRequest | PlainMessage<GetStatusRequest> | undefined): boolean {
    return proto3.util.equals(GetStatusRequest, a, b);
  }
}

/**
 * @generated from message server_status.v1.GetStatusResponse
 */
export class GetStatusResponse extends Message<GetStatusResponse> {
  /**
   * @generated from field: server_status.v1.GetStatusResponse.ApplicationEnvironment application_environment = 1;
   */
  applicationEnvironment = GetStatusResponse_ApplicationEnvironment.UNSPECIFIED;

  constructor(data?: PartialMessage<GetStatusResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "server_status.v1.GetStatusResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "application_environment", kind: "enum", T: proto3.getEnumType(GetStatusResponse_ApplicationEnvironment) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetStatusResponse {
    return new GetStatusResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetStatusResponse {
    return new GetStatusResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetStatusResponse {
    return new GetStatusResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetStatusResponse | PlainMessage<GetStatusResponse> | undefined, b: GetStatusResponse | PlainMessage<GetStatusResponse> | undefined): boolean {
    return proto3.util.equals(GetStatusResponse, a, b);
  }
}

/**
 * @generated from enum server_status.v1.GetStatusResponse.ApplicationEnvironment
 */
export enum GetStatusResponse_ApplicationEnvironment {
  /**
   * @generated from enum value: APPLICATION_ENVIRONMENT_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: APPLICATION_ENVIRONMENT_DEVELOPMENT = 1;
   */
  DEVELOPMENT = 1,

  /**
   * @generated from enum value: APPLICATION_ENVIRONMENT_STAGING = 2;
   */
  STAGING = 2,

  /**
   * @generated from enum value: APPLICATION_ENVIRONMENT_PRODUCTION = 3;
   */
  PRODUCTION = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(GetStatusResponse_ApplicationEnvironment)
proto3.util.setEnumType(GetStatusResponse_ApplicationEnvironment, "server_status.v1.GetStatusResponse.ApplicationEnvironment", [
  { no: 0, name: "APPLICATION_ENVIRONMENT_UNSPECIFIED" },
  { no: 1, name: "APPLICATION_ENVIRONMENT_DEVELOPMENT" },
  { no: 2, name: "APPLICATION_ENVIRONMENT_STAGING" },
  { no: 3, name: "APPLICATION_ENVIRONMENT_PRODUCTION" },
]);

